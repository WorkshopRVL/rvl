package org.purl.rvl.interpreter.java;

/* CVS $Id: $ */
 
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.ontology.OntModelSpec;
import com.hp.hpl.jena.rdf.model.*;
import java.io.ByteArrayInputStream;
 
/**
 * Vocabulary definitions from file:///Users/Jan/Projekte/SemVis/SemVisTeilprojekte/RVLOwl/rvl.owl 
 * @author Auto-generated by schemagen on 12 Okt 2013 22:22 
 */
public class Rvl {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    //public static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    public static Model m_model = ModelFactory.createDefaultModel();
    
    /** Read the ontology definition into the source model */ 
    /*static { 
        m_model.getDocumentManager().addAltEntry( "http://purl.org/rvl/",
					"file:///Users/Jan/Projekte/SemVis/SemVisTeilprojekte/RVLOwl/rvl.owl" );
        m_model.read( "http://purl.org/rvl/" );
        
    }*/

    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://purl.org/rvl/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>This flag will cause the graphic to show source values that do not exist in 
     *  the raw dataset, but have only been interpolated! Therefore, this setting 
     *  has to be done with care not to suggest the impression of continuous data, 
     *  when only discrete source values exist.</p>
     */
    public static final Property drawInterpolated = m_model.createProperty( "http://purl.org/rvl/drawInterpolated" );
    
    public static final Property inheritedBy = m_model.createProperty( "http://purl.org/rvl/inheritedBy" );
    
    public static final Property invertOrderOfTargetValues = m_model.createProperty( "http://purl.org/rvl/invertOrderOfTargetValues" );
    
    public static final Property invertSourceProperty = m_model.createProperty( "http://purl.org/rvl/invertSourceProperty" );
    
    public static final Property isExistentialPropertyMapping = m_model.createProperty( "http://purl.org/rvl/isExistentialPropertyMapping" );
    
    public static final Property lowerBoundExcl = m_model.createProperty( "http://purl.org/rvl/lowerBoundExcl" );
    
    public static final Property lowerBoundIncl = m_model.createProperty( "http://purl.org/rvl/lowerBoundIncl" );
    
    /** <p>The range should be literals with string, int, float, boolean + discrete visual 
     *  attributes</p>
     */
    public static final Property mapMissingValuesTo = m_model.createProperty( "http://purl.org/rvl/mapMissingValuesTo" );
    
    public static final Property neutralValue = m_model.createProperty( "http://purl.org/rvl/neutralValue" );
    
    public static final Property passedTo = m_model.createProperty( "http://purl.org/rvl/passedTo" );
    
    public static final Property sourceValue = m_model.createProperty( "http://purl.org/rvl/sourceValue" );
    
    public static final Property subGraphic = m_model.createProperty( "http://purl.org/rvl/subGraphic" );
    
    public static final Property subMapping = m_model.createProperty( "http://purl.org/rvl/subMapping" );
    
    public static final Property subMappingRelationProperty = m_model.createProperty( "http://purl.org/rvl/subMappingRelationProperty" );
    
    public static final Property subMapping_mapping = m_model.createProperty( "http://purl.org/rvl/subMapping_mapping" );
    
    public static final Property subMapping_onRole = m_model.createProperty( "http://purl.org/rvl/subMapping_onRole" );
    
    public static final Property subMapping_onTriplePart = m_model.createProperty( "http://purl.org/rvl/subMapping_onTriplePart" );
    
    public static final Property targetValue = m_model.createProperty( "http://purl.org/rvl/targetValue" );
    
    public static final Property topProperty = m_model.createProperty( "http://purl.org/rvl/topProperty" );
    
    public static final Property upperBoundExcl = m_model.createProperty( "http://purl.org/rvl/upperBoundExcl" );
    
    public static final Property upperBoundIncl = m_model.createProperty( "http://purl.org/rvl/upperBoundIncl" );
    
    public static final Property uriPseudoProperty = m_model.createProperty( "http://purl.org/rvl/uriPseudoProperty" );
    
    public static final Resource GraphicAttributeInterval = m_model.createResource( "http://purl.org/rvl/GraphicAttributeInterval" );
    
    /** <p>Also referred to as "Passthrough Mapping" in some tools.</p> */
    public static final Resource IdentityMapping = m_model.createResource( "http://purl.org/rvl/IdentityMapping" );
    
    public static final Resource Interval = m_model.createResource( "http://purl.org/rvl/Interval" );
    
    public static final Resource Mapping = m_model.createResource( "http://purl.org/rvl/Mapping" );
    
    public static final Resource N_AryRelation = m_model.createResource( "http://purl.org/rvl/N-AryRelation" );
    
    public static final Resource NoPropertyValueMapping = m_model.createResource( "http://purl.org/rvl/NoPropertyValueMapping" );
    
    /** <p>When a target graphic relation is used in multiple mappings, a warning should 
     *  be issued, since ambiguities become possible.</p>
     */
    public static final Resource PropertyMapping = m_model.createResource( "http://purl.org/rvl/PropertyMapping" );
    
    public static final Resource PropertyToGraphicAttributeMapping = m_model.createResource( "http://purl.org/rvl/PropertyToGraphicAttributeMapping" );
    
    public static final Resource PropertyToGraphicObjToObjRelationMapping = m_model.createResource( "http://purl.org/rvl/PropertyToGraphicObjToObjRelationMapping" );
    
    public static final Resource RemoveTransitiveHull = m_model.createResource( "http://purl.org/rvl/RemoveTransitiveHull" );
    
    public static final Resource ResourceMapping = m_model.createResource( "http://purl.org/rvl/ResourceMapping" );
    
    public static final Resource Simplification = m_model.createResource( "http://purl.org/rvl/Simplification" );
    
    public static final Resource SourceValueInterval = m_model.createResource( "http://purl.org/rvl/SourceValueInterval" );
    
    public static final Resource SubMappingRelation = m_model.createResource( "http://purl.org/rvl/SubMappingRelation" );
    
    public static final Resource UnifyWithInverseAndPickOne = m_model.createResource( "http://purl.org/rvl/UnifyWithInverseAndPickOne" );
    
    /** <p>Since discrete values on the target site are distinguished and mapped to source 
     *  values, only mappings to visual attributes - not to other visual relations 
     *  - will typically have value mappings. In the case of graphic-object-to-object-relations, 
     *  there are usually no various target values which need to be mapped explicitly. 
     *  Since most are binary, there are only two - either the graphic relation exists 
     *  or not.</p>
     */
    public static final Resource ValueMapping = m_model.createResource( "http://purl.org/rvl/ValueMapping" );
    
    public static final Resource Average = m_model.createResource( "http://purl.org/rvl/Average" );
    
    public static final Resource Calculate = m_model.createResource( "http://purl.org/rvl/Calculate" );
    
    public static final Resource Clamp = m_model.createResource( "http://purl.org/rvl/Clamp" );
    
    public static final Resource Cut = m_model.createResource( "http://purl.org/rvl/Cut" );
    
    public static final Resource GraphicAttributeInterval_1 = m_model.createResource( "http://purl.org/rvl/GraphicAttributeInterval_1" );
    
    public static final Resource GraphicAttributeInterval_2 = m_model.createResource( "http://purl.org/rvl/GraphicAttributeInterval_2" );
    
    public static final Resource Hide = m_model.createResource( "http://purl.org/rvl/Hide" );
    
    public static final Resource Ignore = m_model.createResource( "http://purl.org/rvl/Ignore" );
    
    public static final Resource Linear = m_model.createResource( "http://purl.org/rvl/Linear" );
    
    public static final Resource Logarithmic = m_model.createResource( "http://purl.org/rvl/Logarithmic" );
    
    public static final Resource Missing = m_model.createResource( "http://purl.org/rvl/Missing" );
    
    public static final Resource Neutral = m_model.createResource( "http://purl.org/rvl/Neutral" );
    
    public static final Resource NoMapping = m_model.createResource( "http://purl.org/rvl/NoMapping" );
    
    public static final Resource PropertyMapping_1 = m_model.createResource( "http://purl.org/rvl/PropertyMapping_1" );
    
    public static final Resource ResourceMapping_1 = m_model.createResource( "http://purl.org/rvl/ResourceMapping_1" );
    
    public static final Resource SourceValueInterval_1 = m_model.createResource( "http://purl.org/rvl/SourceValueInterval_1" );
    
    public static final Resource Style = m_model.createResource( "http://purl.org/rvl/Style" );
    
    public static final Resource SubMappingRelation_1 = m_model.createResource( "http://purl.org/rvl/SubMappingRelation_1" );
    
    public static final Resource ValueMapping_1 = m_model.createResource( "http://purl.org/rvl/ValueMapping_1" );
    
    public static final Resource ValueMapping_2 = m_model.createResource( "http://purl.org/rvl/ValueMapping_2" );
    
    public static final Resource sparqlSelector_1 = m_model.createResource( "http://purl.org/rvl/sparqlSelector_1" );
    
}
